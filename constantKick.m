dataDir = '/nfs/cs-ccr-nfs6/vol29/share/ctf/data/ctfmod/MatLab/PhaseFeedforward/data/20141127_1030_Kick1';

bpmNames = {...
    'CC.SVBPM0435H',...
    'CC.SVBPI0535H',...
    'CC.SVBPI0645H',...
    'CC.SVBPI0685H',...
    'CC.SVBPI0735H',...
    'CC.SVBPM0845H',...
    'CC.SVBPM0930H',...    
    'CB.SVBPM0150H',...
    'CB.SVBPS0210H',...
    'CB.SVBPS0250H',...
    'CB.SVBPS0310H',...
    'CB.SVBPS0350H',...
    'CB.SVBPS0410H',...
    'CB.SVBPS0450H',...
    'CB.SVBPS0510H',...
    'CB.SVBPS0550H',...
    'CB.SVBPS0610H',...
    'CB.SVBPS0650H',...
    'CB.SVBPS0710H',...
    'CB.SVBPS0750H',...
    'CB.SVBPS0810H',...
    'CB.SVBPS0850H',...
    'CB.SVBPS0910H',...
    'CB.SVBPS0950H',...
    'CB.SVBPM1030H'...
};
 %'CM.SVBPM0110H',...
%'CM.SVBPM0230H',...
%'CM.SVBPM0330H',...
%'CM.SVBPM0510H',...
%'CM.SVBPM0550H'...
bpmIndexToPlot = 6;

CTFData = mergeMatMonData(dataDir);
[kickSettingName,kickSettings] = extractSettingsFromDataSetComment(CTFData);


nPulses = length(CTFData);
nBPMs = length(bpmNames);

bpmPositions = NaN*ones(nBPMs, nPulses);
for t=1:nPulses
    for bpm=1:nBPMs
        eval(['bpmPositions(bpm,t) = CTFData(t).' bpmNames{bpm} '.MeanAtCursor.mean.value;']);
    end
end

[coeffs,~] = polyfit(kickSettings, squeeze(bpmPositions(bpmIndexToPlot,:)), 1);
slope = coeffs(1)
offset = coeffs(2);

x = linspace(min(kickSettings), max(kickSettings), 100);
y = slope.*x + offset;

plot(x,y);
hold all;
scatter(kickSettings, squeeze(bpmPositions(bpmIndexToPlot,:)),'o');
hold off;